#pragma config(Hubs,  S1, HTMotor,  HTMotor,  none,     none)
#pragma config(Sensor, S1,     ,               sensorI2CMuxController)
#pragma config(Sensor, S2,     INF,            sensorHiTechnicIRSeeker1200)
#pragma config(Sensor, S4,     HTGYRO,         sensorI2CHiTechnicGyro)
#pragma config(Motor,  mtr_S1_C1_1,      yellow,             tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C1_2,      red,             tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C2_1,      blue,             tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C2_2,      green,             tmotorTetrix, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
#include "JoystickDriver.c"
#include "drivers/hitechnic-gyro.h"
string direction = "yellow";
void initializeRobot(){
  return;
}
float DZ(float input){
	if(input > -10 && input < 10){
		return 0;
	}else{
		return input;
	}
}


task directioncont(){
	while(true){
		getJoystickSettings(joystick);
		if(joy1Btn(0)){
		  direction = "blue";
		}else if(joy1Btn(1)){
			direction = "green";
		}else if(joy1Btn(2)){
			direction = "red";
		}else if(joy1Btn(3)){
			direction = "yellow";
		}
	}
}

task drive(){
	while(true){
	getJoystickSettings(joystick);
		if(direction == "blue"){
			motor[yellow] = DZ((((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[blue] = DZ((((joystick.joy1_y1)-(joystick.joy1_x1))/256.0)*100);
			motor[green] = DZ(-(((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[red] = DZ((((joystick.joy1_x1)-(joystick.joy1_y1))/256.0)*100);
		}else if(direction == "green"){
			motor[red] = DZ((((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[yellow] = DZ((((joystick.joy1_y1)-(joystick.joy1_x1))/256.0)*100);
			motor[blue] = DZ(-(((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[green] = DZ((((joystick.joy1_x1)-(joystick.joy1_y1))/256.0)*100);
		}else if(direction == "red"){
			motor[green] = DZ((((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[red] = DZ((((joystick.joy1_y1)-(joystick.joy1_x1))/256.0)*100);
			motor[yellow] = DZ(-(((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[blue] = DZ((((joystick.joy1_x1)-(joystick.joy1_y1))/256.0)*100);
		}else if(direction == "yellow"){
			motor[blue] = DZ((((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[green] = DZ((((joystick.joy1_y1)-(joystick.joy1_x1))/256.0)*100);
			motor[red] = DZ(-(((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[yellow] = DZ((((joystick.joy1_x1)-(joystick.joy1_y1))/256.0)*100);

		motor[blue] = DZ(((joystick.joy1_y2)/256.0)*100);
		motor[red] = DZ(((joystick.joy1_y2)/256.0)*100);
		motor[green] = DZ(((joystick.joy1_y2)/256.0)*100);
		motor[yellow] = DZ(((joystick.joy1_y2)/256.0)*100);

			}
		abortTimeslice();
	}
}
task main(){
  StartTask(drive);
  StartTask(directioncont);
  while(true){
  }

}
