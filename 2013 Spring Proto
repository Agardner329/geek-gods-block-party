#pragma config(Hubs,  S3, HTMotor,  HTServo,  none,     none)
#pragma config(Hubs,  S4, HTMotor,  HTMotor,  none,     none)
#pragma config(Sensor, S2,     touch,          sensorTouch)
#pragma config(Motor,  mtr_S3_C1_1,     LoknLod,       tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S3_C1_2,     height,        tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S4_C1_1,     yellowRed,            tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S4_C1_2,     redGreen,            tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S4_C2_1,     greenBlue,            tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S4_C2_2,     blueYellow,            tmotorTetrix, openLoop)
#pragma config(Servo,  srvo_S3_C2_1,    trigger,               tServoStandard)
#pragma config(Servo,  srvo_S3_C2_2,    RG,              tServoStandard)
#pragma config(Servo,  srvo_S3_C2_3,    YR,               tServoNone)
#pragma config(Servo,  srvo_S3_C2_4,    BY,               tServoNone)
#pragma config(Servo,  srvo_S3_C2_5,    GB,               tServoNone)
#pragma config(Servo,  srvo_S3_C2_6,    servo6,               tServoNone)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

#include "JoystickDriver.c"

#define greenRed redGreen
#define redYellow yellowRed
#define blueGreen greenBlue
#define yellowBlue blueYellow

#define blueBtn joy1Btn(1)
#define greenBtn joy1Btn(2)
#define redBtn joy1Btn(3)
#define yellowBtn joy1Btn(4)

string swerveDirection = "blue";

void initializeRobot(){

	servo[trigger] = 256;

  return;
}
/*------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------*/
task control(){
	while(true){
		getJoystickSettings(joystick);

		if(joy1Btn(1)){
			swerveDirection = "blue";
		}else if(joy1Btn(2)){
			swerveDirection = "green";
		}else if(joy1Btn(3)){
			swerveDirection = "red";
		}else if(joy1Btn(4)){
			swerveDirection = "yellow";
		}else{

		}
		abortTimeslice();
	}
}
/*------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------*/
task drive(){
	while(true){
		if(joy1Btn(6)){
			swerveDirection = "turn";
			motor[yellowRed] = -100;
			motor[yellowBlue] = -100;
			motor[redGreen] = -100;
			motor[greenBlue] = -100;
		}else if(joy1Btn(5)){
			swerveDirection = "turn";
			motor[yellowRed] = 100;
			motor[yellowBlue] = 100;
			motor[redGreen] = 100;
			motor[greenBlue] = 100;
		}else if(swerveDirection == "blue"){
			motor[redGreen] = -joystick.joy1_y1;
			motor[blueGreen] = -joystick.joy1_y1;
			motor[yellowRed] = joystick.joy1_y2;
			motor[yellowBlue] = joystick.joy1_y2;
		}else if(swerveDirection == "green"){
			motor[yellowRed] = -joystick.joy1_y1;
			motor[blueGreen] = joystick.joy1_y2;
			motor[redGreen] = -joystick.joy1_y1;
			motor[yellowBlue] = joystick.joy1_y2;
		}else if(swerveDirection == "red"){
			motor[redGreen] = joystick.joy1_y1;
			motor[yellowBlue] = -joystick.joy1_y2;
			motor[yellowRed] = -joystick.joy1_y1;
			motor[blueGreen] = joystick.joy1_y2;
		}else if(swerveDirection == "yellow"){
			motor[yellowBlue] = -joystick.joy1_y1;
			motor[blueGreen] = -joystick.joy1_y1;
			motor[yellowRed] = joystick.joy1_y2;
			motor[redGreen] = joystick.joy1_y2;
		}else if(swerveDirection == "turn"){
			motor[blueGreen] = (((joystick.joy1_y1)-(joystick.joy1_x1))/256.0)*100;
			motor[yellowBlue] = (((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100;
			motor[redGreen] = -(((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100;
			motor[yellowRed] = (((joystick.joy1_x1)-(joystick.joy1_y1))/256.0)*100;
		}
		abortTimeslice();
	}
}
/*------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------*/
task launcher(){
	int reloadCounter = 0;
	while(true){
		if(joy1Btn(8)){
			servo[trigger] = 240;
			wait1Msec(900);
			servo[trigger] = 256;
			wait10Msec(10);
			reloadCounter = 0;
		}
		if(joy1Btn(7) && reloadCounter != 1){
			motor[LoknLod] = -75;
			while(SensorValue[touch] != 1){
			}
			motor[LoknLod] = 100;
			wait10Msec(100);
			motor[LoknLod] = 0;
			reloadCounter = 1;
		}
		abortTimeslice();
	}
}
/*------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------*/
task servos(){
	while(true){
		if(swerveDirection == "turn" || swerveDirection == "holo"){
			servo[GB] = 160;//Replace with turn angle
			servo[YR] = 66;//Replace with turn angle
			servo[RG] = 131;//Replace with turn angle
			servo[BY] = 191;//Replace with red angle
		}else if(swerveDirection == "red" || swerveDirection == "blue"){
			servo[GB] = 211;//Replace with red angle
			servo[YR] = 118;//Replace with red angle
			servo[RG] = 72;//Replace with red angle
			servo[BY] = 130;//Replace with red angle
		}else{
			servo[GB] = 86;//Replace with yellow angle
			servo[YR] = 10;//Replace with yellow angle
			servo[RG] = 193;//Replace with yellow angle
			servo[BY] = 247;//Replace with yellow angle
		}
		abortTimeslice();
	}
}
/*------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------*/
task heightControl (){
	while(true){
		if(joystick.joy1_TopHat == 0){
			motor[height] = 50;
		}else if(joystick.joy1_TopHat == 4){
			motor[height] = -50;
		}else{
			motor[height] = 0;
		}
	}
}




task main()
{

  initializeRobot();

  StartTask(launcher);

  StartTask(control);

  StartTask(drive);

  StartTask(servos);

  StartTask(heightControl);

  while (true){

  }
}
