#pragma config(Hubs,  S1, HTMotor,  HTMotor,  HTMotor,  HTMotor)
#pragma config(Hubs,  S3, HTServo,  none,     none,     none)
#pragma config(Sensor, S1,     ,               sensorI2CMuxController)
#pragma config(Sensor, S2,     INF,            sensorHiTechnicIRSeeker1200)
#pragma config(Sensor, S3,     ,               sensorI2CMuxController)
#pragma config(Sensor, S4,     HTGYRO,         sensorI2CHiTechnicGyro)
#pragma config(Motor,  mtr_S1_C1_1,     yellow,        tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C1_2,     red,           tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C2_1,     blue,          tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C2_2,     green,         tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C3_1,     lift,          tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C3_2,     flag,          tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C4_1,     arm,           tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C4_2,     wisk,          tmotorTetrix, openLoop)
#pragma config(Servo,  srvo_S3_C1_1,    wrist,                tServoStandard)
#pragma config(Servo,  srvo_S3_C1_2,    autoflipper,          tServoStandard)
#pragma config(Servo,  srvo_S3_C1_3,    servo3,               tServoNone)
#pragma config(Servo,  srvo_S3_C1_4,    servo4,               tServoNone)
#pragma config(Servo,  srvo_S3_C1_5,    servo5,               tServoNone)
#pragma config(Servo,  srvo_S3_C1_6,    servo6,               tServoNone)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

// Gyro Drive.c

#include "JoystickDriver.c";
#include "Sample Programs\NXT\3rd Party Sensor Drivers\drivers\hitechnic-gyro.h";
//default direction yellow
string direction = "yellow";
int gyroloop = 0;
/*-----------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------Barrier-----------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------*/
void initializeRobot(){
	nNoMessageCounterLimit = 125;
	return;
}
/*-----------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------Barrier-----------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------*/

float DZ(float input){
	if(input > -10 && input < 10){
		return 0;
		}else{
		return input;
	}
}
/*-----------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------Barrier-----------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------*/

task directionCont(){
	while(true){
		getJoystickSettings(joystick);
		if(joy1Btn(1)){
			direction = "blue";
			}else if(joy1Btn(2)){
			direction = "green";
			}else if(joy1Btn(3)){
			direction = "red";
			}else if(joy1Btn(4)){
			direction = "yellow";
		}
	}
}
/*-----------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------Barrier-----------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------*/

task drive(){
	while(true){
		getJoystickSettings(joystick);
		if(direction == "red"){
			motor[yellow] = DZ((((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[blue] = DZ((((joystick.joy1_y1)-(joystick.joy1_x1))/256.0)*100);
			motor[green] = DZ(-(((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[red] = DZ((((joystick.joy1_x1)-(joystick.joy1_y1))/256.0)*100);
		}else if(direction == "yellow"){
			motor[red] = DZ((((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[yellow] = DZ((((joystick.joy1_y1)-(joystick.joy1_x1))/256.0)*100);
			motor[blue] = DZ(-(((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[green] = DZ((((joystick.joy1_x1)-(joystick.joy1_y1))/256.0)*100);
		}else if(direction == "blue"){
			motor[green] = DZ((((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[red] = DZ((((joystick.joy1_y1)-(joystick.joy1_x1))/256.0)*100);
			motor[yellow] = DZ(-(((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[blue] = DZ((((joystick.joy1_x1)-(joystick.joy1_y1))/256.0)*100);
		}else if(direction == "green"){
			motor[blue] = DZ((((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[green] = DZ((((joystick.joy1_y1)-(joystick.joy1_x1))/256.0)*100);
			motor[red] = DZ(-(((joystick.joy1_y1)+(joystick.joy1_x1))/256.0)*100);
			motor[yellow] = DZ((((joystick.joy1_x1)-(joystick.joy1_y1))/256.0)*100);
		}

		motor[blue] -= DZ(((joystick.joy1_x2)/256.0)*100);
		motor[red] -= DZ(((joystick.joy1_x2)/256.0)*100);
		motor[green] -= DZ(((joystick.joy1_x2)/256.0)*100);
		motor[yellow] -= DZ(((joystick.joy1_x2)/256.0)*100);
		abortTimeslice();
	}
}
/*-----------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------Barrier-----------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------*/
task liftCont(){
	while(true){
		if(joy1Btn(8)){
			motor[lift] = -100;
		}else if(joy1Btn(6)){
			motor[lift] = 100;
		}else{
			motor[lift] = 0;
		}
		abortTimeslice();
	}
}
/*-----------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------Barrier-----------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------*/
task flagCont(){
	while(true){
		if(joy1Btn(7)){
			motor[flag] = -100;
		}else if(joy1Btn(5)){
			motor[flag] = 100;
		}else{
			motor[flag] = 0;
		}
		abortTimeslice();
	}
}
/*-----------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------Barrier-----------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------*/
task armCont(){
	while(true){
		if(joystick.joy1_TopHat == 4){
			motor[arm] = -100;
			servo[wrist] -= 1;
		}else if(joystick.joy1_TopHat == 0){
			motor[arm] = 100;
			servo[wrist] += 1;
		}else{
			motor[arm] = 0;
		}
		abortTimeslice();
	}
}
/*-----------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------Barrier-----------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------------------------*/
task main(){
	initializeRobot();
	waitForStart();
	StartTask(drive);
	
	StartTask(directionCont);
	
	StartTask(armCont);
	
	StartTask(flagCont);
	
	StartTask(liftCont);
	
	while(true){
	}
}